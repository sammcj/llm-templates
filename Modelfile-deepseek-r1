#  ollama create deepseek-v3-0324-ud:iq2_xxs -f Modelfile-deepseek-r1

#  FROM ./DeepSeek-R1-IQ3_XXS.gguf
FROM ../DeepSeek-V3-0324-UD-IQ2_XXS.gguf

# Note this will use a lot of vRAM as deepseek v3 architecture doesn't support flash attention/qkv
PARAMETER num_ctx 4096
PARAMETER num_batch 32

# basic sampling
PARAMETER temperature 0.2
PARAMETER top_p 0.85

PARAMETER stop "<｜begin▁of▁sentence｜>"
PARAMETER stop "<｜end▁of▁sentence｜>"
PARAMETER stop "<｜User｜>"
PARAMETER stop "<｜Assistant｜>"

# Experimental for Deepseek's official tool calling template below
PARAMETER stop "<｜tool▁output▁begin｜>"
PARAMETER stop "<｜tool▁output▁end｜>"
PARAMETER stop "<｜tool▁calls▁begin｜>"
PARAMETER stop "<｜tool▁calls▁end｜>"
PARAMETER stop "<｜tool▁sep｜>"

### TEMPLATES ###

TEMPLATE """{{- if .System }}{{ .System }}{{ end }}
{{- range $i, $_ := .Messages }}
{{- $last := eq (len (slice $.Messages $i)) 1}}
{{- if eq .Role "user" }}<｜User｜>{{ .Content }}
{{- else if eq .Role "assistant" }}
{{- if .Content }}<｜Assistant｜>{{ .Content }}{{- if not $last }}<｜end▁of▁sentence｜>{{- end }}
{{- else if .ToolCalls }}<｜Assistant｜><｜tool▁calls▁begin｜>
{{- range $j, $tool := .ToolCalls }}<｜tool▁call▁begin｜>{{ $tool.Type }}<｜tool▁sep｜>{{ $tool.Function.Name }}
```json
{{ $tool.Function.Arguments }}
```<｜tool▁call▁end｜>{{- end }}<｜tool▁calls▁end｜><｜end▁of▁sentence｜>
{{- end }}
{{- else if eq .Role "tool" }}{{- if eq $i 0 }}<｜tool▁outputs▁begin｜>{{- end }}<｜tool▁output▁begin｜>{{ .Content }}<｜tool▁output▁end｜>
{{- if $last }}<｜tool▁outputs▁end｜>{{- end }}
{{- end }}
{{- if and $last (ne .Role "assistant") }}<｜Assistant｜>{{- end }}
{{- end }}"""

### SAMPLING ###

## min_p sampling (comment out temp and top_p above if using)
### min_p sampling ##
# min_p works best with a bit of temperature
#  PARAMETER temperature 0.2
#  #  # 1.0 disables top_p, so we can use min_p
#  PARAMETER top_p 1.0
#  PARAMETER min_p 0.9
### min_p sampling ##
