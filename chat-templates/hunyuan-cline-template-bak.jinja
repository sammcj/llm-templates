{% if tools %}
    {% set weekday_map = {'Monday': '星期一', 'Tuesday': '星期二', 'Wednesday': '星期三', 'Thursday': '星期四', 'Friday': '星期五', 'Saturday': '星期六', 'Sunday': '星期日'} %}
    {% set weekday_cn = weekday_map[strftime_now('%A')] %}
    {% set datetime_str = strftime_now('%Y-%m-%d %H:%M:%S') %}
    {% set datetime_str = datetime_str + ' ' + weekday_cn %}
    {% for message in loop_messages %}
        {% if 'content' in message %}
            {% set content = message['content'] %}
        {% else %}
            {% set content = '' %}
        {% endif %}
        {% if loop.index0 == 0 %}
            {% set content_tmp = '你是一位函数组合专家。你会得到一个问题和一组可能的函数。根据问题，你需要进行一个或多个函数/工具调用以实现目的。
如果没有一个函数可以使用，请直接使用自然语言回复用户，以助手：开头。
如果给定的问题缺少函数所需的参数，请使用自然语言进行提问，向用户询问必要信息，以助手：开头。
如果调用结果已经足够回答用户问题，请对历史结果进行总结，使用自然语言回复用户，以助手：开头。

你应该使用XML格式进行工具调用。以下是可用的工具：

<tools>
write_to_file - 创建或覆盖文件
参数：
- path: 文件路径
- content: 文件内容

read_file - 读取文件内容
参数：
- path: 文件路径

str_replace_editor - 替换文件中的文本
参数：
- command: "str_replace"
- path: 文件路径
- old_str: 要替换的文本
- new_str: 新文本

search_files - 在文件中搜索模式
参数：
- path: 搜索路径
- regex: 正则表达式模式
- file_pattern: 文件模式（可选）

execute_command - 执行命令
参数：
- command: 要执行的命令
- requires_approval: 是否需要批准（true/false）

list_files - 列出目录中的文件
参数：
- path: 目录路径

view_source_code_definitions - 查看源代码定义
参数：
- path: 文件路径
</tools>

使用工具时，请使用以下XML格式：
<工具名称>
<参数1>值1</参数1>
<参数2>值2</参数2>
</工具名称>

例如：
<write_to_file>
<path>src/example.js</path>
<content>console.log("Hello World");</content>
</write_to_file>
' %}
            {% if message['role'] == 'system' %}
                {% set content_tmp = content_tmp + '
额外要求：
' + content + '

记住：使用XML格式进行工具调用，不要使用JSON格式。

如果额外要求里有时间信息，就以额外要求里的时间为准，否则，参考当前时间：' + datetime_str %}
                {% set content = '<|startoftext|>' + content_tmp + '<|extra_4|>' %}
            {% elif message['role'] == 'user' %}
                {% set content_tmp = content_tmp + '
记住：使用XML格式进行工具调用，不要使用JSON格式。

当前时间：' + datetime_str %}
                {% set content_tmp = '<|startoftext|>' + content_tmp + '<|extra_4|>'%}
                {% set content = content_tmp + '用户：' + content + '<|extra_0|>' %}
            {% endif %}
        {% else %}
            {% if message['role'] == 'user' %}
                {% set content = '用户：' + content + '<|extra_0|>' %}
            {% elif message['role'] == 'assistant' %}
                {% if 'tool_calls' in message %}
                    {% set tool_calls = message['tool_calls'] %}
                    {% set ns = namespace(xml_tools="") %}
                    {% for tool_call in tool_calls %}
                        {% set function = tool_call['function'] %}
                        {% set name = function['name'] %}
                        {% set arguments = function['arguments'] %}
                        {% if arguments is string %}
                            {% set arguments = arguments | fromjson %}
                        {% endif %}
                        {% set ns.xml_tools = ns.xml_tools + '<' + name + '>\n' %}
                        {% for key, value in arguments.items() %}
                            {% set ns.xml_tools = ns.xml_tools + '<' + key + '>' + value | string + '</' + key + '>\n' %}
                        {% endfor %}
                        {% set ns.xml_tools = ns.xml_tools + '</' + name + '>\n' %}
                    {% endfor %}
                    {% set content = content + ns.xml_tools %}
                {% else %}
                    {% set content = '助手：' + content %}
                {% endif %}
                {% set content = content + '<|eos|>' %}
            {% elif message['role'] == 'tool' %}
                {% if content is not string %}
                    {% set content = content | tojson %}
                {% endif %}
                {% set content = '<tool_response>' + content + '</tool_response>' %}
                {% set content = content + '<|extra_0|>' %}
            {% endif %}
        {% endif %}
    {{- content -}}
    {% endfor %}
{% else %}
    {% set context = {'has_head': true} %}
    {% for message in loop_messages %}
        {% if 'content' in message %}
            {% set content = message['content'] %}
        {% else %}
            {% set content = '' %}
        {% endif %}
        {% if loop.index0 == 0 %}
            {% if content == '' %}
                {% set _ = context.update({'has_head': false}) %}
            {% elif message['role'] == 'system' %}
                {% set content = '<|startoftext|>' + content + '<|extra_4|>' %}
            {% endif %}
        {% endif %}
        {% if message['role'] == 'user' %}
            {% if loop.index0 == 1 and not context.has_head %}
                {% set content = '<|startoftext|>' + content %}
            {% endif %}
            {% if loop.index0 == 1 and context.has_head %}
                {% set content = content + '<|extra_0|>' %}
            {% else %}
                {% set content = '<|startoftext|>' + content + '<|extra_0|>' %}
            {% endif %}
        {% elif message['role'] == 'assistant' %}
            {% set content = content + '<|eos|>' %}
        {% elif message['role'] == 'tool' %}
            {% set content = content + '<|extra_0|>' %}
        {% endif %}
        {{- content -}}
    {% endfor %}
{% endif %}
{%- if enable_thinking is defined and enable_thinking is false %}
    {{- '<think>\n\n</think>\n' }}
{%- endif %}
